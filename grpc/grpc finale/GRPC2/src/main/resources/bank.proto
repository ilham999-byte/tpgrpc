syntax = "proto3";

option java_package = "org.example.stubs";
option java_multiple_files = true;

message Client {
  string id = 1;
  string nom = 2;
  string prenom = 3;
  string email = 4;
  string telephone = 5;
}

message Chambre {
  string id = 1;
  string type = 2;
  float prix = 3;
  bool disponible = 4;
}

message Reservation {
  string id = 1;
  Client client = 2;
  Chambre chambre = 3;
  string dateDebut = 4; // Date formatted as a string, or use google.protobuf.Timestamp for Date
  string dateFin = 5;   // Date formatted as a string, or use google.protobuf.Timestamp for Date
  string preferences = 6;
}

message ReservationRequest {
  string clientId = 1;
  string chambreId = 2;
  string dateDebut = 3;  // Date formatted as a string, or use google.protobuf.Timestamp
  string dateFin = 4;    // Date formatted as a string, or use google.protobuf.Timestamp
  string preferences = 5;
}

message ReservationResponse {
  Reservation reservation = 1;
}

message GetReservationByIdRequest {
  string id = 1;
}

message GetReservationByIdResponse {
  Reservation reservation = 1;
}

message GetAllReservationsRequest {}

message GetAllReservationsResponse {
  repeated Reservation reservations = 1;
}

message UpdateReservationRequest {
  string id = 1;
  string clientId = 2;
  string chambreId = 3;
  string dateDebut = 4;
  string dateFin = 5;
  string preferences = 6;
}

message DeleteReservationRequest {
  string id = 1;
}

message DeleteReservationResponse {
  bool success = 1;
}

service ReservationService {
  rpc createReservation(ReservationRequest) returns (ReservationResponse);
  rpc getReservationById(GetReservationByIdRequest) returns (GetReservationByIdResponse);
  rpc getAllReservations(GetAllReservationsRequest) returns (GetAllReservationsResponse);
  rpc updateReservation(UpdateReservationRequest) returns (ReservationResponse);
  rpc deleteReservation(DeleteReservationRequest) returns (DeleteReservationResponse);
}
